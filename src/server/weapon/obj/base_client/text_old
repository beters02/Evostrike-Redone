-- Vector Recoil
	task.spawn(function()
		local m = player:GetMouse()
		local mray = util_getMouseTargetRayWithAcc(Vector2.new(m.X, m.Y), Vector2.zero)
		local currVecRecoil, vecmod = weaponCameraObject:getRecoilVector3(weaponCameraObject:getSprayPatternKey())
		weaponVar.currentVectorModifier = vecmod
		local acc = sharedWeaponFunctions.CalculateAccuracy(player, weaponOptions, weaponVar.currentBullet, currVecRecoil, weaponVar, char.HumanoidRootPart.Velocity.Magnitude)
		acc /= 500

		-- register client ray using client accuracy
		local direction = mray.Direction
		direction = Vector3.new(direction.X + (acc.X/2)*(direction.X > 0 and 1 or -1), direction.Y + acc.Y, direction.Z + (acc.X/2)*(direction.Z > 0 and 1 or -1)).Unit

		-- get result
		local params = sharedWeaponFunctions.getFireCastParams(player, camera)
		local result = workspace:Raycast(mray.Origin, direction * 250, params)

		if result then
			-- register client shot for bullet/blood/sound effects
			sharedWeaponFunctions.RegisterShot(player, weaponOptions, result, mray.Origin)

			-- pass ray information to server for verification and damage
			local rayInformation = sharedWeaponFunctions.createRayInformation(mray, result)

			task.spawn(function()
				local hitRegistered, newAccVec = weaponRemoteFunction:InvokeServer("Fire", weaponVar.currentBullet, false, rayInformation, workspace:GetServerTimeNow())
				-- if a hit is not registered through the server, reset accuracy and attempt to register again
				--[[if not hitRegistered then
					--[[acc, weaponVar = CalculateAccuracy(weaponVar.currentBullet, currVecRecoil, weaponVar, false, newAccVec)
					local nur = GetNewTargetRay(Vector2.new(m.X, m.Y), Vector2.new(0,0))
					local direction = nur.Direction
					direction = Vector3.new(direction.X + acc.X/500, direction.Y + acc.Y/500, direction.Z).Unit
					local nr = workspace:Raycast(unitRay.Origin, direction * 100, params)
					local nri = createRayInformation(nur, nr)
					weaponRemoteFunction:InvokeServer("Fire", weaponVar.currentBullet, caccvec, nri, fireRegisterTime, true)
				end]]
			end)

			return true
		end